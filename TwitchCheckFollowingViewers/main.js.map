{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input } from '@angular/core';\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { JsonPipe } from '@angular/common';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'TwitchCheckFollowingViewers';\n  confirmed_bots = []\n  @Input() username: string; // decorate the property with @Input()\n  username_notfound: false;\n  chatters: { \n    viewer_count: number,\n    follower_count: number,\n    confirmed_bot_count: number,\n    viewers: Array<{name: string, isFollowing: boolean, date: string, isConfirmedBot: boolean, typeClass: string}>\n  } = { \n    viewer_count: 0,\n    follower_count: 0,\n    confirmed_bot_count: 0,\n    viewers: []\n  }\n\n  constructor(private http: HttpClient) { \n    this.setConfirmedBots();\n  }\n\n  setConfirmedBots() {\n    let url = 'https://api.twitchinsights.net/v1/bots/all';\n    this.http.get(url).subscribe((data: []) => {\n      let bots = data['bots'];\n\n      for(var i=0;i<bots.length;i++) {\n        this.confirmed_bots[i] = bots[i][0];\n      }\n    });\n  }\n\n   getLiveViewers(username) {\n     username = username.toLowerCase()\n    let url = 'https://tmi.twitch.tv/group/user/' + username + '/chatters';\n\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n    headers.append('Origin','http://localhost:4200');\n    headers.append('Access-Control-Allow-Origin', '*');\n\n    return this.http.get(url);\n  }\n\n\n  getViewers() {\n    this.getLiveViewers(this.username).subscribe((data) => {\n      this.chatters.viewers = [];\n      this.chatters.follower_count = 0;\n      this.chatters.confirmed_bot_count = 0;\n      this.chatters.viewer_count = parseInt(data['chatter_count'])-1; //remove broadcaster\n\n      var allUsers = [];\n\n      for(var i=0;i<data['chatters']['viewers'].length; i++) {\n        let viewer = data['chatters']['viewers'][i];\n        allUsers.push(viewer);\n      }\n\n      for(var i=0;i<data['chatters']['vips'].length;i++) {\n        let viewer = data['chatters']['vips'][i];\n        allUsers.push(viewer)\n      }\n\n      for(var i=0;i<data['chatters']['moderators'].length;i++) {\n        let viewer = data['chatters']['moderators'][i];\n        allUsers.push(viewer);\n      }\n\n      for(var i=0;i<allUsers.length;i++) {\n        let viewer = allUsers[i];\n        let viewer_i = i;\n        this.chatters.viewers[i] = {name: viewer, isFollowing: false, date: 'Not following', isConfirmedBot:false, typeClass: \"non-follower\"};\n\n        for(var j=0;j<this.confirmed_bots.length;j++) {\n          if (viewer == this.confirmed_bots[j]) {\n            this.chatters.confirmed_bot_count++;\n            this.chatters.viewers[i].isConfirmedBot = true;\n            this.chatters.viewers[i].date = \"Confirmed bot\"\n            break;\n          }\n        }\n\n        this.checkIfFollow(viewer, this.username).subscribe((data) => {\n          let date = JSON.parse(data.substring(18, data.length-2));\n\n          if(date.data.length > 0) {\n            this.chatters.viewers[viewer_i] = { name: viewer, isFollowing:true, date: \"Followed on: \" + date.data[0].followed_at, isConfirmedBot:true, typeClass:\"follower\" }\n            this.chatters.follower_count++;\n          }\n          else\n          {\n            if(this.chatters.viewers[viewer_i].isConfirmedBot)\n            {\n              this.chatters.viewers[viewer_i].typeClass = \"bot\"\n            }\n          }\n        });\n      }\n\n    });\n  }\n\n  checkIfFollow(username, follow) {\n    let url = 'https://twitch.center/follow?username=' + username + '&channel=' + follow + '&callback=angular.callbacks'\n\n    return this.http.get(url, {responseType: 'text'});\n  }\n}\n","<div>\n  <span>Twitch username: </span><input [(ngModel)]=\"username\"><span *ngIf=\"username_notfound\">invalid user</span>\n  <button (click)=\"getViewers()\">Check</button>\n</div>\n\n<div>\n  <p>Active viewers count: {{chatters.viewer_count}}</p>\n  <p>Active viewers following count: {{chatters.follower_count}} ({{ chatters.follower_count/chatters.viewer_count*100 }}%)</p>\n  <p>Confirmed bots count: {{chatters.confirmed_bot_count }} ({{ chatters.confirmed_bot_count/chatters.viewer_count*100 }}%)</p>\n  <p>Active viewers without bots following count: {{chatters.follower_count}} ({{ chatters.follower_count/ (chatters.viewer_count-chatters.confirmed_bot_count) * 100 }}%)</p>\n\n  <li *ngFor=\"let viewer of chatters.viewers\"  [ngClass]=\"viewer.typeClass\"> {{viewer.name}} : {{viewer.date}} </li>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}